from os.path import abspath
import sys
from PyQt5 import QtWidgets, uic
from PyQt5 import QtGui

from src.controller.dialogWindow import ScrapeDialog
from src.scraper.scrapeController import Controller
from src.controller.model import PandasModel
from src.controller.actorWindow import Actor
from src.controller.aboutWindow import About
import src.utility.fileHandler as io

class MainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()  
        self._url = "https://www.imdb.com/list/ls053501318/"
        self._imdbScraper = Controller(self._url)
        self._aboutWindow = None
        self._dialogWindow = None
        self._newWindow = None
        self._model = None
        self._pathUI = io.getUIPath(abspath(__file__), "mainWindow.ui")
        self._pathIcon = io.getUIPath(abspath(__file__), "imdb.svg")
        
        # Retrieves the top 50 in case database does not exist (usually happens the very first time)
        self._imdbScraper.getTop()
        
        # Load the .ui file
        uic.loadUi(self._pathUI, self) 
        self.setWindowTitle("Top 50 List")        
        self.setWindowIcon(QtGui.QIcon(self._pathIcon))

        # Initialize button
        self.button_scrape.clicked.connect(self._scrape)

        # Initialize table
        self._fillTable()        

        # Set actions
        self.actionExit.triggered.connect(self._exitApp)
        self.actionScrape.triggered.connect(self._showDialogProgress)
        self.actionReload.triggered.connect(self._fillTable)
        self.actionAbout.triggered.connect(self._showAbout)

    def _fillTable(self):
        df = io.getTable("", "top50")
        self._model = PandasModel(df)  
        self.tableView.setModel(self._model)
        # Hide first column of dataframe as it was generated by Pandas
        self.tableView.setColumnHidden(0, True)
        # Click behaviour set up
        self.tableView.doubleClicked.connect(self._showActor)
        self.tableView.setSelectionBehavior(self.tableView.SelectRows)
        # Set up the columns. Last and second to last column get stretched for neat design
        header = self.tableView.horizontalHeader()
        header.setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)       
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(3, QtWidgets.QHeaderView.Stretch)

    def _scrape(self) -> None:
        print("click worked")
        self._imdbScraper.structure()

    def _showActor(self, clickedIndex):
        # Retrieve the id of the selected actress or actor
        row=clickedIndex.row()
        model=clickedIndex.model()
        actorID = model._df.iloc[row]["ID"]
        name = model._df.iloc[row]["Name"]
        print("Selected: ", name, "ID: ", actorID)

        # Show new window
        self._newWindow = Actor(actorID)
        self._newWindow.setWindowTitle(name)
        self._newWindow.setWindowIcon(QtGui.QIcon(self._pathIcon))

    def _showAbout(self):
        self._aboutWindow = About()
        self._aboutWindow.setWindowIcon(QtGui.QIcon(self._pathIcon))

    def _exitApp(self):
        sys.exit()

    def _showDialogProgress(self):
        # todo
        print("Scrape process window")
        self._dialogWindow = ScrapeDialog(self._imdbScraper)
        self._dialogWindow.setWindowIcon(QtGui.QIcon(self._pathIcon))
        

app = QtWidgets.QApplication(sys.argv)
window = MainWindow()
window.show()
app.exec_()